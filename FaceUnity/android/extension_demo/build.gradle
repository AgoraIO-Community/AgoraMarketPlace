plugins {
    id 'com.android.application'
}

def localSdkPath= "${rootProject.projectDir.absolutePath}/debug_sdk"

android {
    namespace 'io.agora.rte.extension.faceunity'
    compileSdk 33

    defaultConfig {
        applicationId "io.agora.rte.extension.faceunity"
        minSdk 17
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }

    if(new File(localSdkPath).exists() && project.agoraSDKDebug) {
        sourceSets {
            main {
                jniLibs.srcDirs = [localSdkPath]
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.databinding:databinding-runtime:4.1.3'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    String agoraSDKPackage
    if (!project.hasProperty("agoraSDKPackage")) {
        agoraSDKPackage = "io.agora.rtc:full-sdk:4.0.0-rc.1"
    }
    else {
        println "project.agoraSDKPackage found: ${project.agoraSDKPackage}"
        agoraSDKPackage = project.agoraSDKPackage
    }

    boolean devExtension
    if (!project.hasProperty("devExtension"))
        devExtension = false
    else {
        println "project.devExtension found: ${project.devExtension}"
        devExtension = project.devExtension
    }

    println "project.agoraSDKDebug: ${project.agoraSDKDebug}"
    println "debug_sdk: [${localSdkPath}]"

    if(new File(localSdkPath).exists() && project.agoraSDKDebug){
        println "debug_sdk existed: true - [${localSdkPath}]"

        implementation fileTree(dir: "${localSdkPath}", include: ['*.jar', '*.aar', '*.so'])
    }
    else {
        implementation agoraSDKPackage
    }

    if (devExtension)
        implementation project(path: ':extension_aar')
    else
        implementation fileTree(dir: "libs", include: ['*.aar'])

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}